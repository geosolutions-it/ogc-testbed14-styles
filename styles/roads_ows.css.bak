* {
  sort-by: 'z_order';
  /* sort-by-group: "roadsGroup"; */
}

[class = 'highway' and type in ('motorway', 'motorway_link')][@sd < 25M] {
  stroke: #cb171a;
  stroke-width: categorize(@sd, 2, 400k, 1.9, 800k, 1.4, 1.5M, 1, 3M, 0.8, 6M, 0.5);
  stroke-linecap: butt, round;
  [@sd < 200k] {
    z-index: 0, 1;
    /*stroke: #c24e6b, #e892a2;*/
	stroke: #c24e6b, #cb171a;
    [@sd < 100k] {
      /*stroke: #dc2a67, #e892a2;*/
	  stroke: #dc2a67, #cb171a;
    };
    [type = 'motorway'] {
      stroke-width:  
        categorize(@sd, 27, 1.5k, 21, 3k, 18, 6k, 10, 25k, 6, 200k, 3.5),
        [categorize(@sd, 27 - 2, 1.5k, 21 - 2, 3k, 18 - 2, 6k, 10 - 1.4, 25k, 6 - 1, 200k, 3.5 - 1) * 0.9];
      [bridge = 1] {
        /*stroke: black, #e892a2;*/
		stroke: black, #cb171a;
      };
    };
    [type = 'motorway_link'] {
      stroke-width:  
        categorize(@sd, 16, 1.5k, 13, 3k, 12, 6k, 7.8, 25k, 4, 200k, 1.5),
        [categorize(@sd, 16 - 2, 1.5k, 13 - 2, 3k, 12 - 2, 6k, 7.8 - 1.4, 25k, 4 - 1, 200k, 1.5 - 1) * 0.9];
      [bridge = 1] {
        /*stroke: black, #e892a2;*/
		stroke: black, #cb171a;
      };
    };
  }
}

[class = 'highway' and type in ('primary', 'primary_link')][@sd < 3M] {
  stroke: #cb171a;
  stroke-width: categorize(@sd, 1.8, 800k, 1.4, 1.5M, 1);
  stroke-linejoin: round;
  stroke-linecap: butt, round;
  [@sd < 200k] {
    z-index: 0, 1;
    stroke: #c38a27, #cb171a;
    stroke-width: 
      categorize(@sd, 27, 1.5k, 21, 3k, 18, 6k, 10, 25k, 5, 100k, 3.5),
      [categorize(@sd, 27 - 2, 1.5k, 21 - 2, 3k, 18 - 2, 6k, 10 - 1.4, 25k, 5 - 1, 100k, 3.5 - 1)];
    [bridge = 1] {
      stroke: black, #cb171a;
      stroke-linecap: butt, round;
    };
    [@sd < 100k] {
      stroke: #a06b00, #cb171a;
    }
  };

}

[class = 'highway' and type in ('trunk', 'trunk_link')][@sd < 25M] {
  stroke: #cb171a;
  stroke-width: categorize(@sd, 1.9, 800k, 1.4, 1.5M, 1, 3M, 0.6, 12.5M, 0.4);
  stroke-linejoin: round;
  stroke-linecap: butt, round;
  [@sd < 200k] {
    z-index: 0, 1;
    stroke: #cf6649, #cb171a;
    [bridge = 1] {
      stroke: black, #cb171a;
      stroke-linecap: butt, round;
      [@sd < 100k] {
        stroke: black, #cb171a;
      }
    };
    stroke-width: 
      categorize(@sd, 27, 1.5k, 21, 3k, 18, 6k, 10, 25k, 5, 100k, 3.5),
      [categorize(@sd, 27 - 2, 1.5k, 21 - 2, 3k, 18 - 2, 6k, 10 - 1.4, 25k, 5 - 1, 100k, 3.5 - 1)];
    [@sd < 100k] {
      stroke: #c84e2f, #cb171a;
    }
  };

}


[class = 'highway' and type in ('secondary', 'secondary_link')][@sd < 1.5M] {
  stroke: #cb171a;
  stroke-width: 0.8;
  stroke-linejoin: round;
  stroke-linecap: butt, round;
  [@sd < 200k] {
    z-index: 0, 1;
    stroke-opacity: 0.4, 1;
    stroke: #9eae23, #cb171a;
    [@sd < 100k] {
      stroke-opacity: 1, 1;
      stroke: #707d05, #cb171a;
    };
    stroke-width: 
      categorize(@sd, 27, 1.5k, 21, 3k, 18, 6k, 10, 12.5k, 9, 25k, 5, 100k, 3.5),
      [categorize(@sd, 27 - 2, 1.5k, 21 - 2, 3k, 18 - 2, 6k, 10 - 1.5, 12.5k, 9 - 1.5, 25k, 5 - 1, 100k, 3.5 - 0.8)];
    [bridge = 1] {
      /* TODO: needs a way to override the first but not the second */
      stroke: black, #cb171a;
    };
  };

}

[class = 'highway' and type in ('tertiary', 'tertiary_link')][@sd < 800k] {
  stroke: #bbb;
  stroke-linejoin: round;
  [@sd < 200k] {
    stroke-linecap: butt, round;
    z-index: 0, 1;
    stroke: #8f8f8f, #FFFFFF;
    stroke-width: 
      categorize(@sd, 27, 1.5k, 21, 3k, 18, 6k, 10, 12.5k, 9, 25k, 4, 100k, 2.5),
      [categorize(@sd, 27 - 2, 1.5k, 21 - 2, 3k, 18 - 2, 6k, 10 - 1.5, 12.5k, 9 - 1.5, 25k, 4 - 1, 100k, 2.5 - 0.8)];
    [bridge = 1] {
      /* TODO: needs a way to override the first but not the second */
      stroke: black, #FFFFFF;
    };

  };
}

[class = 'highway' and type = 'road'][@sd < 800k] {
  stroke-width: 1;
  stroke: #bbb;
  stroke-linejoin: round;
  stroke-linecap: round;
  [@sd < 50k] {
    stroke: #bbb, #ddd;
    stroke-linecap: butt, round;
    stroke-width: 
      categorize(@sd, 11, 1.5k, 8.5, 3k, 7, 6k, 3.5, 25k, 2),
      [categorize(@sd, 11 - 2, 1.5k, 8.5 - 2, 3k, 7 - 2, 6k, 3.5 - 1.2, 25k, 2 - 1.1)];
    [bridge = 1] {
      /* TODO: needs a way to override the first but not the second */
      stroke: black, #ddd;
    };

  }
}

[class = 'highway' and type in ('residential', 'unclassified')][@sd < 200k] {
  stroke: #bbb;
  stroke-linejoin: round;
  stroke-linecap: round;
  [type = 'residential'] {
    stroke-width: 0.4;
  };
  [type = 'unclassified'] {
    stroke-width: 1;
  };
  [@sd < 100k] {
    z-index: 0, 1;
    stroke-linecap: butt, round;
    stroke: #bbb, white;
    stroke-width: 
      categorize(@sd, 17, 1.5k, 13, 3k, 12, 6k, 6, 12.5k, 5, 25k, 3, 50k, 2.5),
      [categorize(@sd, 17 - 2, 1.5k, 13 - 2, 3k - 2, 12 - 2, 6k, 6 - 1.4, 12.5k, 5 - 1.4, 25k, 3 - 1.1, 50k, 2.5 - 1)];
    [bridge = 1] {
      /* TODO: needs a way to override the first but not the second */
      stroke: black, white;
    };

  };
}

[class = 'highway' and type = 'living_street'][@sd < 100k] {
  z-index: 0, 1;
  stroke: #bbb, #ededed;
  stroke-width: 
    categorize(@sd, 17, 1.5k, 13, 3k, 12, 6k, 6, 12.5k, 5, 25k, 3, 50k, 2),
    [categorize(@sd, 17 - 2, 1.5k, 13 - 2, 3k - 2, 12 - 2, 6k, 6 - 1.4, 12.5k, 5 - 1.4, 25k, 3 - 1.1, 50k, 2 - 1)];
  stroke-linejoin: round;
  stroke-linecap: butt, round;
}


[class = 'highway' and type = 'service'][@sd < 100k] {
  stroke-linejoin: round;
  stroke-linecap: round;
  [service not in ('parking_aisle', 'drive-through', 'driveway')] {
    stroke: #bbb;
  };
  [service not in ('parking_aisle', 'drive-through', 'driveway')][@sd < 50k] {
    z-index: 0, 1;
    stroke: #bbb, white;
    stroke-linecap: butt, round;
    stroke-width: 
      categorize(@sd, 11, 1.5k, 8.5, 3k, 7, 6k, 3.5, 25k, 2),
      [categorize(@sd, 11 - 1.6, 1.5k, 8.5 - 1.6, 3k, 7 - 1.6, 6k, 3.5 - 1.6, 25k, 2 - 1.2)];
  };
  [service in ('parking_aisle', 'drive-through', 'driveway')][@sd < 12.5k] {
    z-index: 0, 1;
    stroke: #bbb, white;
    stroke-linecap: butt, round;
    stroke-width: 
      categorize(@sd, 5.5, 1.5k, 4.75, 3k, 3.5, 6k, 2),
      [categorize(@sd, 5.5 - 1.6, 1.5k, 4.75 - 1.6, 3k - 1.6, 3.5 - 1.6, 6k, 2 - 1.2)];

  }

}

[class = 'highway' and type = 'pedestrian'][@sd < 100k] {
  z-index: 0,1;
  stroke: #999, #dddde8;
  stroke-linejoin: round;
  stroke-linecap: butt, round;
  stroke-width: 
    categorize(@sd, 17, 1.5k, 13, 3k, 12, 6k, 6, 12.5k, 5, 25k, 3, 50k, 2),
    [categorize(@sd, 17 - 1.8, 1.5k, 13 - 1.8, 3k, 12 - 1.8, 6k, 6 - 1.2, 12.5k, 5 - 1.2, 25k, 3 - 1.1, 50k, 2 - 1)];
}

[class = 'highway' and type = 'raceway'][@sd < 200k] {
  stroke: pink;
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-width: 
    categorize(@sd, 24, 800, 12, 1.5k, 8, 12.5k, 6, 25k, 3, 50k, 2, 100k, 1.2);

}

[class = 'highway' and type = 'platform'][@sd < 12.5k] {
  stroke: grey, #bbbbbb;
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-width: 6, 4;
}

[class = 'highway' and type = 'steps'][@sd < 100k] {
  stroke-dasharray: 2 1;
  [access <> 'no'][@sd >= 25k] {
    stroke: salmon;
    stroke-width: 0.7;
  };
  [@sd < 25k] {
    stroke: white, salmon;
    [access = 'no'] {
      stroke: white, #bbbbbb;
    };
    stroke-dasharray: 3 0, 1.6 1.4;
    stroke-linecap: round, butt;
    stroke-linejoin: round, butt;
    stroke-width: 5, 3;
    stroke-opacity: 0.4, 1;
  }
}


[class = 'highway' and (type = 'bridleway' or (type = 'path' and horse = 'designated'))][@sd < 100k] {
  stroke-dasharray: 4 2;
  [access <> 'no'][@sd >= 25k] {
    stroke: green;
    stroke-width: 0; /** hairline **/
  };
  [@sd < 25k] {
    stroke: white, green;
    [access = 'no'] {
      stroke: white, #aaddaa;
    };
    stroke-dasharray: 6 0, 4 2;
    stroke-linecap: round, butt;
    stroke-linejoin: round, butt;
    stroke-width: 3, 1;
    stroke-opacity: 0.4, 1;
  }
}


[class = 'highway' and type = 'construction'][@sd < 200k] {
  stroke-width: 
    categorize(@sd, 8, 12.5k, 4, 50k, 2), 
    categorize(@sd, 7, 12.5k, 3.5, 50k, 2);
  stroke-linecap: butt, round;
  stroke: #9cc, white;
  stroke-dasharray: 6 0, [categorize(@sd, '8 6', 12.5k, '6 4', 50k, '4 2')];
  [construction in ('motorway', 'motorway_link')] {
    /*stroke: #e892a2, white;*/
	stroke: #cb171a, white;
  };
  [construction in ('trunk', 'trunk_link')] {
    stroke: #f9b29c, white;
  };
  [construction in ('primary', 'primary_link')] {
    stroke: #fcd6a4, white;
  };
  [construction in ('secondary', 'secondary_link')] {
    stroke: #f7fabf, white;
  };
  [construction in ('tertiary', 'tertiary', 'residential', 'unclassified', 'living_street')] {
    stroke: #aaa;
    [@sd > 100k] {
      /* TODO: add a way to unset properties in GeoCSS */
      stroke-opacity: 0;
    };
    [@sd <= 100k] {
      stroke: #aaa, white;
      stroke-width: 3, 2;
      stroke-dasharray: 8 0, 5 3;
    }
  };
  [construction in ('footway', 'cycleway', 'bridleway', 'path', 'track')] {
    stroke: #aaa;
    [@sd > 50k] {
      /* TODO: add a way to unset properties in GeoCSS */
      stroke-opacity: 0;
    };
    [@sd <= 50k] {
      stroke: #aaa, #69f;
      stroke-width: 3, 1.2;
      stroke-dasharray: 8 0, 2 6;
    }
  };
  [construction = 'service'] {
    stroke: white;
    [@sd > 100k] {
      /* TODO: add a way to unset properties in GeoCSS */
      stroke-opacity: 0;
    };

  }
}


[class = 'highway' and (type = 'footway' or (type = 'path' and horse <> 'designated' and bicycle <> 'designated'))][@sd < 100k] {
  stroke: salmon;
  stroke-dasharray: 1 3;
  stroke-linecap: round;
  stroke-join: round;
  [access = 'no'][@sd >= 25k] {
    stroke-opacity: 0;
  };
  [@sd < 25k] {
    stroke: white, salmon;
    [access = 'no'] {
      stroke: white, #bbb;
    };
    stroke-dasharray: 4 0, 1 3;
    stroke-opacity: 0.4, 1;
    stroke-linecap: butt, round;
    stroke-width: 
      categorize(@sd,  2.3, 12.5k,  2), 
      categorize(@sd,  1.3, 12.5k,  1);
    [surface in ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',
      'concrete:plates', 'paving_stones', 'metal', 'wood')] {
        /** TODO: add an inherit keyword to inherit the value of the first dasharray without duplicating it? */
        stroke-width: 
          categorize(@sd,  2.3, 12.5k,  2), 
          categorize(@sd,  1.3, 1.5k, 1, 3k, 0.9);
        stroke-dasharray: 
          4 0, 
          [categorize(@sd, '3 3', 3k, '3 3.5', 12.5k, '2 3.5')];
      };
    [surface in ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 
      'grass_paver', 'gravel', 'ground', 'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay')] {
        stroke: white, blue;
        [access = 'no'] {
          stroke: white, #9999ff;                    
        };
        stroke-width: 
          categorize(@sd,  2.3, 12.5k,  2), 
          categorize(@sd,  1.3, 1.5k, 1, 3k, 0.9);
        stroke-dasharray: 
          4 0, 
          1 4;
      };
    [surface is null] {
      stroke: white, blue;
      [access = 'no'] {
        stroke: white, #9999ff;                    
      };
      stroke-width: 
        categorize(@sd,  2.3, 12.5k,  2), 
        categorize(@sd,  1.3, 1.5k, 1, 3k, 0.9);
      stroke-dasharray: 
        4 0, 
        1 4 2 3;
    };

  }
}

[class = 'highway' and (type = 'cycleway' or (type = 'path' and bicycle = 'designated'))][@sd < 100k] {
  stroke: blue;
  stroke-dasharray: 1 3;
  stroke-linecap: round;
  stroke-join: round;
  stroke-width: 0.2;
  [access = 'no'][@sd >= 25k] {
    stroke-opacity: 0;
  };
  [@sd < 25k] {
    stroke: white, blue;
    [access = 'no'] {
      stroke: white, #bbb;
    };
    stroke-dasharray: 4 0, 1 3;
    stroke-opacity: 0.4, 1;
    stroke-width: 
      categorize(@sd,  2.9, 25k,  2.7), 
      categorize(@sd,  0.9, 25k, 0.7);
    stroke-linecap: butt, round;
    [surface in ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',
      'concrete:plates', 'paving_stones', 'metal', 'wood')] {
        /** TODO: add an inherit keyword to inherit the value of the first dasharray without duplicating it? */
        stroke-dasharray: 
          4 0, 
          categorize(@sd, '3 3', 3k, '3 3.5', 12.5k, '2 3.5');
      };
    [surface in ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 
      'grass_paver', 'gravel', 'ground', 'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay')] {
        stroke: white, blue;
        [access = 'no'] {
          stroke: white, #9999ff;                    
        };
        stroke-width: 
          categorize(@sd,  2.3, 12.5k,  2), 
          categorize(@sd,  1.3, 1.5k, 1, 3k, 0.9);
        stroke-dasharray: 
          4 0, 
          1 4;
      };
    [surface is null] {
      stroke: white, blue;
      [access = 'no'] {
        stroke: white, #9999ff;                    
      };
      stroke-width: 
        categorize(@sd,  2.3, 12.5k,  2), 
        categorize(@sd,  1.3, 1.5k, 1, 3k, 0.9);
      stroke-dasharray: 
        4 0, 
        1 4 2 3;
    };

  }
}

[class = 'highway' and type = 'track'][@sd < 100k] {
  stroke: #996600;
  stroke-dasharray: 5 4 2 4;
  stroke-linecap: round;
  stroke-join: round;
  stroke-width: 0.5;
  stroke-opacity: 0.8;
  [access = 'no'][@sd >= 25k] {
    stroke-opacity: 0;
  };
  [@sd < 25k] {
    stroke-linecap: butt, round;
    stroke: white, #996600;
    stroke-dasharray: 5 0, 5 4 2 4;
    stroke-opacity: 0.4, 1;
    [access = 'no'] {
      stroke: white, #e2c5bb;
    };
    stroke-width: 3.5, 1.5;
    [tracktype = 'grade1'] {
      stroke-dasharray: 100 0, 100 0;
    };
    [tracktype = 'grade2'] {
      stroke-dasharray: 15 0, 11 4;
    };
    [tracktype = 'grade3'] {
      stroke-dasharray: 10 0, 4 6;
    };
    [tracktype = 'grade4'] {
      stroke-dasharray: 10 0, 2 8;
    };

  }
}

[class = 'railway'] {
  z-index: 1, 2;

  [class = 'railway' and type = 'rail' and service = ''][@sd < 6M],
  [class = 'railway' and (type = 'preserved' and service in ('spur', 'siding', 'yard')) or
  (type = 'rail' and service in ('spur', 'siding', 'yard')) or
  (type = 'tram' and service in ('spur', 'siding', 'yard'))][@sd < 100k] {
    stroke: #787878;
    stroke-width: categorize(@sd,  0.9, 200k, 0.8 ,3M, 0.5);
    stroke-linejoin: round;
    [@sd < 100k] {
      stroke: #707070, white;
      stroke-linejoin: round;
      stroke-width: 3, 1;
      stroke-linecap: butt, round;
      stroke-dasharray: 16 0, 8 8;
      [(type = 'preserved' and service in ('spur', 'siding', 'yard')) or
      (type = 'rail' and service in ('spur', 'siding', 'yard')) or
      (type = 'tram' and service in ('spur', 'siding', 'yard'))] {
        stroke: #aaa, white;
        stroke-linejoin: round;
        stroke-width: 2, 0.8;
      }
    }

  };

  [class = 'railway' and type in ('light_rail', 'funicular', 'narrow_gauge')][@sd < 3M] {
    stroke: [categorize(@sd, '#666666', 100k, '#aaaaaa', 800k, '#cccccc')];
    stroke-width: categorize(@sd,  2, 100k, 1);
  };

  [class = 'railway' and type in ('miniature')][@sd < 25k] {
    stroke: #999;
    stroke-width: 1.2, 3;
    stroke-dasharray: 10 0, 1 10;
  };

  [class = 'railway' and type in ('tram')][@sd < 200k],
  [class = 'railway' and type in ('tram-service')][@sd < 25k] {
    stroke: [categorize(@sd,  '#444', 100k, '#6E6E6E')];
    stroke-width: [categorize(@sd, 2, 6k, 1.5, 25k, 1, 50k, 0.75)];
    [type = 'tram-service'] {
      stroke-width: categorize(@sd, 2, 1.5k, 1.5, 3k, 1, 6k, 0.5);
    }
  };

  [class = 'railway' and type in ('subway')][@sd < 200k] {
    stroke: #999;
    stroke-width: 2;
  };

  [class = 'railway' and type = 'preserved'][@sd < 200k] {
    stroke: #aaa;
    stroke-width: 1.5;
    stroke-linejoin: round;
    [service in ('spur', 'siding', 'yard')] {
      stroke-width: 1;
    };
    [@sd < 100k] {
      stroke: #999, white;
      stroke-width: 3, 1;
      stroke-linecap: butt, round;
      stroke-dasharray: 10 0, 0 1 8 1;
      [service in ('spur', 'siding', 'yard')] {
        stroke-width: 2, 0.8;
      }
    }
  };

  [class = 'railway' and type = 'monorail'][@sd < 50k] {
    stroke: white, #777;
    stroke-width: 4, 2;
    stroke-opacity: 0.4, 1;
    stroke-linecap: round;
    stroke-linecap: butt, round;
    stroke-dasharray: 5 0, 2 3;
  };

  [class = 'railway' and type = 'construction'][@sd < 100k] {
    stroke: grey;
    stroke-width: 2;
    stroke-linejoin: round;
    stroke-dasharray: categorize(@sd, '3 3', 25k, '2 3', 50k, '2 4');
  };

  [class = 'railway' and type = 'disused'][@sd < 25k] {
    stroke: #aaa;
    stroke-width: 2;
    stroke-linejoin: round;
    stroke-dasharray: 2 4;
  };

  [class = 'railway' and type = 'platform'][@sd < 12.5k] {
    stroke: grey, #bbb;
    stroke-width: 6, 4;
    stroke-linejoin: round;
  };

  [class = 'railway' and type = 'turntable'][@sd < 12.5k] {
    stroke: #999;
    stroke-width: 1.5;
  };
  
}



[class = 'aeroway'][@sd < 400k] {
  stroke: #bbc;
  [type = 'runway'] {
    stroke-width: categorize(@sd, 24, 12.5k, 18, 25k, 12, 50k, 6, 100k, 4, 200k, 2);
  };
  [type = 'taxiway'] {
    stroke-width: categorize(@sd, 8, 12.5k, 6, 25k, 4, 50k, 2, 100k, 1);
  }
}